@model _52000657_LuuDucHai.Models.product

@{
    ViewBag.Title = "Tạo mới sản phẩm";
    Layout = "~/Areas/admin/Views/Shared/_MyLayout.cshtml";
}

@section _Header {
    <style>
        .card {
            border: 1px solid var(--bs-link-hover-color);
        }

        .header-card {
            margin-bottom: 10px;
            background-color: var(--bs-link-hover-color);
            padding: 10px 18px;
            border-radius: 5px 5px 0px 0px;
            border: 1px solid #ccc;
        }

        .header-title {
            margin: 0;
            color: #fff;
        }

        .control-label {
            text-align: right;
            line-height: 38px;
        }

        .form-group {
            margin-top: 10px;
        }

        .control-label-unset {
            text-align: right;
        }

        #hide {
            width: 16px;
            height: 16px;
        }

        .center-vertical {
            display: flex;
            align-items: center;
        }
    </style>
}

<main id="main" class="main">
    <section class="section dashboard">
        <div class="row">
            <div>
                <div class="card">
                    <div class="header-card">
                        <h4 class="header-title">Tạo mới sản phẩm</h4>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("Create", "product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group row">
                                    @Html.Label("Tên sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Hình ảnh 1", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10 center-vertical">
                                        <input type="file" name="firstImg" id="firstImg" accept=".jpg,.png,.gif,.jpeg,.bmp" />
                                        @*@Html.EditorFor(model => model.firstImg, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.ValidationMessageFor(model => model.firstImg, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Hình ảnh 2", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10 center-vertical">
                                        <input type="file" name="secondImg" id="secondImg" accept=".jpg,.png,.gif,.jpeg,.bmp" />
                                        @*@Html.EditorFor(model => model.secondImg, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.ValidationMessageFor(model => model.secondImg, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Nhập giá cũ", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.oldPrice, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.oldPrice, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Nhập giá mới", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.newPrice, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.newPrice, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Meta", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label col-md-2", @for = "hide" })
                                    <div class="col-md-10 center-vertical">
                                        <div class="checkbox">
                                            @{
                                                bool hide = true;
                                            }
                                            @Html.CheckBoxFor(model => hide)

                                            @*@Html.EditorFor(model => model.hide)*@

                                            @Html.ValidationMessageFor(model => model.hide, "", new
                                            {
                                                @class = "text-danger"
                                            })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Danh mục", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.idCate, (SelectList)ViewBag.category, new { @class = "form-control" })
                                        @*@Html.DropDownList("idCate", null, htmlAttributes: new { @class = "form-control" })*@
                                        @Html.ValidationMessageFor(model => model.idCate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Trạng thái", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Xuất xứ", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.origin, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.origin, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Bảo hành", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.warranty, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.warranty, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Chất liệu vỏ", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.caseMaterial, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.caseMaterial, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Chất liệu mặt", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.faceMaterial, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.faceMaterial, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Năng lượng sử dụng", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.energyUsed, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.energyUsed, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Chống nước", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.waterResistant, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.waterResistant, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Kích thước mặt", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.faceSize, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.faceSize, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.Label("Kích thước dây", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.strapSize, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.strapSize, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-md-2"></div>
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Tạo mới" class="btn btn-success" />
                                    </div>
                                </div>
                            </div>
                        }

                        <div>
                            @Html.ActionLink("Quay lại", "Index")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

@section _footer
{
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
  
    <script>
        function createMetaAuto(title) {
            let slug;
            slug = title.toLowerCase();
            slug = slug.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a").replace(/\ /g, '-').replace(/đ/g, "d").replace(/đ/g, "d").replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y").replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u").replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ.+/g, "o").replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ.+/g, "e").replace(/ì|í|ị|ỉ|ĩ/g, "i");
            return slug;
        };

        function formatCurrency(number) {
            return new Intl.NumberFormat().format(number)
        }

        $(document).ready(function () {
            $("#name").keyup(function () {
                let text = createMetaAuto($("#name").val())
                $("#meta").val(text);
            })

            //$("#oldPrice").keyup(function () {
            //    let rel = formatCurrency($("#oldPrice").val())
            //    console.log(rel)
            //    $("#oldPrice").val(rel);
            //})
        })
    </script>
}